{"version":3,"sources":["Components/Images/sanlam.png","Components/DisplayCards.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","openData","Data","portfolio","clientAccountGroups","pendingData","incompleteData","arcText","color","font","size","openDate","Date","inceptionDate","toString","split","pendingDate","toUpperCase","incompleteDate","updatedDate","DisplayCards","props","state","cardStatus","setToOpen","bind","setToPending","setToIncomplete","this","setState","className","onClick","d","fill","productLabel","clientAccountGroupNumber","currencySymbol","marketValue","toFixed","id","viewBox","width","height","availableMarketValue","funds","length","src","Sanlam","alt","progress","text","thickness","fillColor","textStyle","percentageComplete","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e69f3da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sanlam.0e1b9872.png\";","import React from \"react\";\r\nimport Data from \"./data.json\";\r\nimport \"./style.css\";\r\nimport Sanlam from \"./Images/sanlam.png\";\r\nimport ProgressArc from 'react-arc-progress';\r\n\r\n//Store each card's information from the json file\r\nconst openData = Data.portfolio.clientAccountGroups[0];\r\nconst pendingData = Data.portfolio.clientAccountGroups[1];\r\nconst incompleteData = Data.portfolio.clientAccountGroups[2];\r\n\r\n//Text style for progress arcs\r\nlet arcText ={color: \"#2875ca\", font: \"'Yantramanav', sans-serif\", size: \"2em\"};\r\n\r\n//Convert date format\r\nlet openDate = new Date(openData.inceptionDate).toString().split(\" \");\r\nlet pendingDate = new Date(pendingData.inceptionDate).toString().toUpperCase().split(\" \");\r\nlet incompleteDate = new Date(incompleteData.updatedDate).toString().toUpperCase().split(\" \");\r\n\r\nexport default class DisplayCards extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {cardStatus: \"Open\"};\r\n\t\tthis.setToOpen = this.setToOpen.bind(this);\r\n\t\tthis.setToPending = this.setToPending.bind(this);\r\n\t\tthis.setToIncomplete = this.setToIncomplete.bind(this);\r\n\t}\r\n\t//Update status depending on which button user selects\r\n\tsetToOpen(){\r\n\t\tthis.setState({cardStatus: \"Open\"});\r\n\t}\r\n\tsetToPending(){\r\n\t\tthis.setState({cardStatus: \"Pending\"});\r\n\t}\r\n\tsetToIncomplete(){\r\n\t\tthis.setState({cardStatus: \"Incomplete\"});\r\n\t}\r\n\r\n\trender(){\r\n\t\t//Display card depending on status\r\n\t\t// ---------- OPEN CARD ---------- //\r\n\t\tif (this.state.cardStatus===\"Open\"){\r\n\t\t\treturn(\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"buttons\">\r\n\t\t\t\t\t\t<button onClick={this.setToOpen}>Open</button>\r\n\t\t\t\t\t\t<button onClick={this.setToPending}>Pending</button>\r\n\t\t\t\t\t\t<button onClick={this.setToIncomplete}>Incomplete</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"cardHeader\">\r\n\t\t\t\t\t\t\t<svg><path d=\"M26 0a26 26 0 1 0 26 26A26 26 0 0 0 26 0zm0 49a23 23 0 1 1 23-23 23 23 0 0 1-23 23zm12.5-13.5a1 1 0 0 1-1 1h-23a1 1 0 0 1 0-2h23a1 1 0 0 1 1 1zm-22-4v-5a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1h-3a1 1 0 0 1-1-1zm7 0v-10a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1h-3a1 1 0 0 1-1-1zm7 0v-15a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1v15a1 1 0 0 1-1 1h-3a1 1 0 0 1-1-1z\" fill=\"#FFFFFF\"/></svg>\r\n\t\t\t\t\t\t\t<div className=\"headerText\">\r\n\t\t\t\t\t\t\t\t<h2>{openData.productLabel}</h2>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tInvestor Code: \r\n\t\t\t\t\t\t\t\t\t<b> {openData.clientAccountGroupNumber}</b>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"cardBody\">\r\n\t\t\t\t\t\t\t<p>Total value</p>\r\n\t\t\t\t\t\t\t<h2>{openData.currencySymbol}{openData.marketValue.toFixed(2)}</h2>\r\n\t\t\t\t\t\t\t<p>Total available</p>\r\n\t\t\t\t\t\t\t<svg id=\"info\" viewBox=\"0 0 20 20\" width=\"20\" height=\"20\"><path d=\"M10 0a10 10 0 1 0 10 10A10 10 0 0 0 10 0zm1 15H9V8h2zm-1-8a1 1 0 1 1 1-1 1 1 0 0 1-1 1z\" fill=\"#5dbdad\"/></svg>\r\n\t\t\t\t\t\t\t<h3>{openData.currencySymbol}{openData.availableMarketValue.toFixed(2)}</h3>\r\n\t\t\t\t\t\t\t<p>Total funds:</p>\r\n\t\t\t\t\t\t\t<h3>{openData.funds.length}</h3>\r\n\t\t\t\t\t\t\t<p>Investing since: \r\n\t\t\t\t\t\t\t<b id=\"investingDate\"> {openDate[2]} {openDate[1]} {openDate[3]}</b>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<div className=\"bottomButtonDiv\">\r\n\t\t\t\t\t\t\t\t<button id=\"viewFundButton\">View fund</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t\t<div id=\"portfolioManager\">\r\n\t\t\t\t\t\t\t\t<p>portfolio managed by</p>\r\n\t\t\t\t\t\t\t\t<img src={Sanlam}  alt=\"Portolio manager\"/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\t// ---------- PENDING CARD ---------- //\r\n\t\telse if (this.state.cardStatus===\"Pending\"){\r\n\t\t\treturn(\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"buttons\">\r\n\t\t\t\t\t\t<button onClick={this.setToOpen}>Open</button>\r\n\t\t\t\t\t\t<button onClick={this.setToPending}>Pending</button>\r\n\t\t\t\t\t\t<button onClick={this.setToIncomplete}>Incomplete</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"cardHeader\">\r\n\t\t\t\t\t\t\t<svg><path d=\"M26 0a26 26 0 1 0 26 26A26 26 0 0 0 26 0zm0 49a23 23 0 1 1 23-23 23 23 0 0 1-23 23zm12.64-27.81v6.15a1 1 0 1 1-2 0v-4.07l-8.22 7.2a1 1 0 0 1-1.33 0l-5-4.41-6.3 4.2v4H37a1 1 0 0 1 0 2H13.83V16.18a1 1 0 0 1 2 0v11.67L21.66 24a1 1 0 0 1 1.22.08l4.88 4.34 7.18-6.28h-3.49a1 1 0 1 1 0-2h6.18a.71.71 0 0 1 .21 0h.17a.71.71 0 0 1 .14.1 1.18 1.18 0 0 1 .18.13s0 .09.07.13a.64.64 0 0 1 .1.18.89.89 0 0 1 .14.51z\" fill=\"#FFFFFF\"/></svg>\r\n\t\t\t\t\t\t\t<div className=\"headerText\">\r\n\t\t\t\t\t\t\t\t<h2>{pendingData.productLabel}</h2>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tInvestor Code: \r\n\t\t\t\t\t\t\t\t\t<b> {pendingData.clientAccountGroupNumber}</b>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"cardBody\">\r\n\t\t\t\t\t\t\t<ProgressArc progress=\"1\" text=\"100%\" thickness=\"7\" fillColor=\"#2875ca\" size=\"100\" textStyle={arcText}/>\r\n\t\t\t\t\t\t\t<div className=\"textBoxRight\">\r\n\t\t\t\t\t\t\t\t<p>Well done! We have all the information we need.</p>\r\n\t\t\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t\t\t<p>Your investment is currently pending.</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"textBoxBottom\">\r\n\t\t\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t\t\t<p>Application submitted:</p>\r\n\t\t\t\t\t\t\t\t<h3>{pendingDate[2]} {pendingDate[1]} {pendingDate[3]}</h3>\r\n\t\t\t\t\t\t\t\t<p>Total funds:</p>\r\n\t\t\t\t\t\t\t\t<h3>{pendingData.funds.length}</h3>\r\n\t\t\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\t// ---------- INCOMPLETE CARD ---------- //\r\n\t\telse if (this.state.cardStatus===\"Incomplete\"){\r\n\t\t\treturn(\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"buttons\">\r\n\t\t\t\t\t\t<button onClick={this.setToOpen}>Open</button>\r\n\t\t\t\t\t\t<button onClick={this.setToPending}>Pending</button>\r\n\t\t\t\t\t\t<button onClick={this.setToIncomplete}>Incomplete</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"cardHeader\">\r\n\t\t\t\t\t\t\t<svg><path d=\"M26 0a26 26 0 1 0 26 26A26 26 0 0 0 26 0zm0 49a23 23 0 1 1 23-23 23 23 0 0 1-23 23zm12.64-27.81v6.15a1 1 0 1 1-2 0v-4.07l-8.22 7.2a1 1 0 0 1-1.33 0l-5-4.41-6.3 4.2v4H37a1 1 0 0 1 0 2H13.83V16.18a1 1 0 0 1 2 0v11.67L21.66 24a1 1 0 0 1 1.22.08l4.88 4.34 7.18-6.28h-3.49a1 1 0 1 1 0-2h6.18a.71.71 0 0 1 .21 0h.17a.71.71 0 0 1 .14.1 1.18 1.18 0 0 1 .18.13s0 .09.07.13a.64.64 0 0 1 .1.18.89.89 0 0 1 .14.51z\" fill=\"#FFFFFF\"/></svg>\r\n\t\t\t\t\t\t\t<div className=\"headerText\">\r\n\t\t\t\t\t\t\t\t<h2>{incompleteData.productLabel}</h2>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tInvestor Code: \r\n\t\t\t\t\t\t\t\t\t<b> TBC</b>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"cardBody\">\r\n\t\t\t\t\t\t\t<ProgressArc progress=\"0.35\" text=\"35%\" thickness=\"7\" fillColor=\"#f4a028\" size=\"100\" textStyle={arcText}/>\r\n\t\t\t\t\t\t\t<div className=\"textBoxRight\">\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tAlmost there! \r\n\t\t\t\t\t\t\t\t\t<b> {incompleteData.percentageComplete}</b>\r\n\t\t\t\t\t\t\t\t\t% done with your application.\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t\t\t<p>Pick up where you left off or</p>\r\n\t\t\t\t\t\t\t\t<button id=\"cancelButton\">\r\n\t\t\t\t\t\t\t\t\tcancel\r\n\t\t\t\t\t\t\t\t\t<svg viewBox=\"0 0 26 26\" width=\"15\" height=\"15\"><path d=\"M13 0a13 13 0 1 0 13 13A13 13 0 0 0 13 0zm5.7 17.29a1 1 0 0 1-1.41 1.41L13 14.41 8.71 18.7a1 1 0 0 1-1.41-1.41L11.59 13 7.3 8.71A1 1 0 0 1 8.71 7.3L13 11.59l4.29-4.29a1 1 0 0 1 1.41 1.41L14.41 13z\" fill=\"#2875ca\"/></svg>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"textBoxBottom\">\r\n\t\t\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t\t\t<p>Last updated:</p>\r\n\t\t\t\t\t\t\t\t<h3>{incompleteDate[2]} {incompleteDate[1]} {incompleteDate[3]}</h3>\r\n\t\t\t\t\t\t\t\t<p>Total funds:</p>\r\n\t\t\t\t\t\t\t\t<h3>{incompleteData.funds.length}</h3>\r\n\t\t\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t\t\t<div className=\"bottomButtonDiv\">\r\n\t\t\t\t\t\t\t\t\t<button id=\"applicationButton\">Resume application</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\t\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}","import React from 'react';\nimport \"./App.css\";\nimport DisplayCards from \"./Components/DisplayCards.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DisplayCards/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}